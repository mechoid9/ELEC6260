    14: int f1(int x1, int x2) { 
0x20000228 4602      MOV           r2,r0
    15:         return x1 + x2; 
0x2000022A 1850      ADDS          r0,r2,r1
    16: } 
    17:  
0x2000022C 4770      BX            lr
    18: int f2(int x1) { 
0x2000022E 4601      MOV           r1,r0
    19:         return x1 + 1;  
0x20000230 1C48      ADDS          r0,r1,#1
    20: } 
    21:  
0x20000232 4770      BX            lr
    22: void f3(int r) { 
    23:         int j; 
0x20000234 B510      PUSH          {r4,lr}
0x20000236 4604      MOV           r4,r0
    24:         for (j = 0; j < 2; j++) 
0x20000238 2300      MOVS          r3,#0x00
0x2000023A E009      B             0x20000250
    25:                 k = k + f1(r + j, 5); 
0x2000023C 18E0      ADDS          r0,r4,r3
0x2000023E 2105      MOVS          r1,#0x05
0x20000240 F7FFFFF2  BL.W          f1 (0x20000228)
0x20000244 490A      LDR           r1,[pc,#40]  ; @0x20000270
0x20000246 6809      LDR           r1,[r1,#0x00]
0x20000248 4408      ADD           r0,r0,r1
0x2000024A 4909      LDR           r1,[pc,#36]  ; @0x20000270
0x2000024C 6008      STR           r0,[r1,#0x00]
0x2000024E 1C5B      ADDS          r3,r3,#1
0x20000250 2B02      CMP           r3,#0x02
0x20000252 DBF3      BLT           0x2000023C
    26: } 
    27:  
0x20000254 BD10      POP           {r4,pc}
    28: void main() { 
    29:         int a; 
0x20000256 B500      PUSH          {lr}
    30:         k = 0; 
0x20000258 2000      MOVS          r0,#0x00
0x2000025A 4905      LDR           r1,[pc,#20]  ; @0x20000270
0x2000025C 6008      STR           r0,[r1,#0x00]
    31:         f3(3); 
0x2000025E 2003      MOVS          r0,#0x03
0x20000260 F7FFFFE8  BL.W          f3 (0x20000234)
    32:         a = f2(2); 
0x20000264 2002      MOVS          r0,#0x02
0x20000266 F7FFFFE2  BL.W          f2 (0x2000022E)
0x2000026A EE000A10  VMOV          s0,r0
    33: } 